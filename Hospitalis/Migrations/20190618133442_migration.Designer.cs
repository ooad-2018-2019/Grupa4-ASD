// <auto-generated />
using System;
using HospitalisOOAD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalisOOAD.Migrations
{
    [DbContext(typeof(HospitalisContext))]
    [Migration("20190618133442_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalisOOAD.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Anketa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("doktorID");

                    b.Property<double>("konacnaOcjena");

                    b.Property<int>("ocjena1");

                    b.Property<int>("ocjena2");

                    b.Property<int>("ocjena3");

                    b.Property<int>("ocjena4");

                    b.Property<int>("ocjena5");

                    b.HasKey("ID");

                    b.ToTable("Anketa");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Dokumentacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("KorisnikId");

                    b.Property<DateTime>("datumIzdavanja");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Dokumentacija");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Dokumentacija");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.InfoAplikacije", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tekst");

                    b.HasKey("ID");

                    b.ToTable("InfoAplikacije");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.InfoBolnice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("opis");

                    b.HasKey("ID");

                    b.ToTable("InfoBolnice");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("ime")
                        .IsRequired();

                    b.Property<string>("kontaktTelefon")
                        .IsRequired();

                    b.Property<string>("passwordHash")
                        .IsRequired();

                    b.Property<string>("prezime")
                        .IsRequired();

                    b.Property<string>("spol")
                        .IsRequired();

                    b.Property<string>("username")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Korisnik");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Obavjestenje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tekst")
                        .IsRequired();

                    b.Property<DateTime>("vrijemeObjave");

                    b.HasKey("ID");

                    b.ToTable("Obavjestenje");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Pregled", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<string>("ime");

                    b.Property<string>("prezime");

                    b.Property<DateTime>("termin");

                    b.Property<string>("zauzet");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Pregled");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Izvjestaj", b =>
                {
                    b.HasBaseType("HospitalisOOAD.Models.Dokumentacija");

                    b.Property<string>("rezultatPregleda")
                        .IsRequired();

                    b.ToTable("Izvjestaj");

                    b.HasDiscriminator().HasValue("Izvjestaj");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Recept", b =>
                {
                    b.HasBaseType("HospitalisOOAD.Models.Dokumentacija");

                    b.Property<string>("nazivLijeka")
                        .IsRequired();

                    b.ToTable("Recept");

                    b.HasDiscriminator().HasValue("Recept");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Uputnica", b =>
                {
                    b.HasBaseType("HospitalisOOAD.Models.Dokumentacija");

                    b.Property<string>("odrediste")
                        .IsRequired();

                    b.Property<string>("svrha")
                        .IsRequired();

                    b.ToTable("Uputnica");

                    b.HasDiscriminator().HasValue("Uputnica");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Doktor", b =>
                {
                    b.HasBaseType("HospitalisOOAD.Models.Korisnik");

                    b.Property<string>("Odjel")
                        .IsRequired();

                    b.Property<string>("verKod")
                        .IsRequired();

                    b.ToTable("Doktor");

                    b.HasDiscriminator().HasValue("Doktor");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Pacijent", b =>
                {
                    b.HasBaseType("HospitalisOOAD.Models.Korisnik");

                    b.Property<string>("adresaPrebivalista")
                        .IsRequired();

                    b.Property<DateTime>("datumRodjenja");

                    b.Property<string>("drzavaRodjenja")
                        .IsRequired();

                    b.Property<string>("gradRodjenja")
                        .IsRequired();

                    b.Property<string>("jmbg")
                        .IsRequired();

                    b.ToTable("Pacijent");

                    b.HasDiscriminator().HasValue("Pacijent");
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Dokumentacija", b =>
                {
                    b.HasOne("HospitalisOOAD.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalisOOAD.Models.Pregled", b =>
                {
                    b.HasOne("HospitalisOOAD.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
